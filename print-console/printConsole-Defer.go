package print_console

import "fmt"

func MainDefer() {
	x := 10
	y := 20

	// Тут выведится 10 потому-что значения в defer func(val int) в момент создания
	// самой функции с defer.
	// Она запоминает пересенную которуб передали в defer func на момент создания,
	// даже если ниже эта переменная изменяется
	// Так как мы скопировали значение переменной "x", в функции будет 10
	defer func(val int) {
		fmt.Println("x", val) // 10
	}(x)

	// Тут выведится 200 потому-что тут замыкание. И переменная будет иметь то значение
	// которое у нее было на момент вызова функции.
	// Так как у функции с defer отложенный вызов, переменная уже будет изменена
	defer func() {
		fmt.Println("y", y) // 200
	}()

	x = 100
	y = 200

	fmt.Println("Конец main")
}

// В консоль выведится по порядку:
// Конец main
// y 200
// x 10
// Это связано с тем, что он выполняется в обратном порядке по принципу LIFO
